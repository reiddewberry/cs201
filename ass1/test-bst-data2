Testing balanced tree:
Nodes: 7
Minimum dpeth: 3
Maximum depth: 3
[4 [2 [1] [3]] [6 [5] [7]]]
4
2 6
1 3 5 7
Finding 2... Returned Finding 5... Returned 5
Finding 2... Returned 2
Finding 4... Returned 4
Deleting 4... Returned 4
Nodes: 6
Minimum dpeth: 2
Maximum depth: 3
[5 [2 [1] [3]] [6 [7]]]
5
2 6
1 3 7
Deleting 6... Returned 6
Nodes: 5
Minimum dpeth: 2
Maximum depth: 3
[5 [2 [1] [3]] [7]]
5
2 7
1 3
Deleting 7... Returned 7
Nodes: 4
Minimum dpeth: 1
Maximum depth: 3
[5 [2 [1] [3]]]
5
2
1 3
"Finding" 420... Returning NULL (This is correct)
"Deleting" 420... Returned NULL (This is correct)
Nodes: 4
Minimum dpeth: 1
Maximum depth: 3
[5 [2 [1] [3]]]
5
2
1 3

Testing slightly skewed tree:
Nodes: 10
Minimum dpeth: 2
Maximum depth: 5
[8 [3 [1] [6 [4] [7]]] [10 [15 [13 [14]]]]]
8
3 10
1 6 15
4 7 13
14
Deleting 6... Returned 6
Nodes: 9
Minimum dpeth: 2
Maximum depth: 5
[8 [3 [1] [7 [4]]] [10 [15 [13 [14]]]]]
8
3 10
1 7 15
4 13
14
Deleting 13... Returned 13
Nodes: 8
Minimum dpeth: 2
Maximum depth: 4
[8 [3 [1] [7 [4]]] [10 [15 [14]]]]
8
3 10
1 7 15
4 14
Deleting 10... Returned 10
Nodes: 7
Minimum dpeth: 2
Maximum depth: 4
[8 [3 [1] [7 [4]]] [14 [15]]]
8
3 14
1 7 15
4
Deleting 14... Returned 14
Nodes: 6
Minimum dpeth: 2
Maximum depth: 4
[8 [3 [1] [7 [4]]] [15]]
8
3 15
1 7
4

Testing all left tree:
Nodes: 9
Minimum dpeth: 1
Maximum depth: 9
[9 [8 [7 [6 [5 [4 [3 [2 [1]]]]]]]]]
9
8
7
6
5
4
3
2
1
Deleting 9... Returned 9
Nodes: 8
Minimum dpeth: 1
Maximum depth: 8
[8 [7 [6 [5 [4 [3 [2 [1]]]]]]]]
8
7
6
5
4
3
2
1
Deleting 4... Returned 4
Nodes: 7
Minimum dpeth: 1
Maximum depth: 7
[8 [7 [6 [5 [3 [2 [1]]]]]]]
8
7
6
5
3
2
1
Deleting 1... Returned 1
Nodes: 6
Minimum dpeth: 1
Maximum depth: 6
[8 [7 [6 [5 [3 [2]]]]]]
8
7
6
5
3
2

Testing all right tree:
Nodes: 9
Minimum dpeth: 1
Maximum depth: 9
[1 [2 [3 [4 [5 [6 [7 [8 [9]]]]]]]]]
1
2
3
4
5
6
7
8
9
Deleting 1... Returned 1
Nodes: 8
Minimum dpeth: 1
Maximum depth: 8
[2 [3 [4 [5 [6 [7 [8 [9]]]]]]]]
2
3
4
5
6
7
8
9
Deleting 7... Returned 7
Nodes: 7
Minimum dpeth: 1
Maximum depth: 7
[2 [3 [4 [5 [6 [8 [9]]]]]]]
2
3
4
5
6
8
9
Deleting 9... Returned 9
Nodes: 6
Minimum dpeth: 1
Maximum depth: 6
[2 [3 [4 [5 [6 [8]]]]]]
2
3
4
5
6
8

Testing zig-zag tree:
Nodes: 8
Minimum dpeth: 1
Maximum depth: 8
[18 [17 [16 [8 [14 [12 [10 [11]]]]]]]]
18
17
16
8
14
12
10
11
Deleting 8... Returned 8
Nodes: 7
Minimum dpeth: 1
Maximum depth: 7
[18 [17 [16 [10 [14 [12 [11]]]]]]]
18
17
16
10
14
12
11

Testing left skewed tree:
Nodes: 8
Minimum dpeth: 2
Maximum depth: 7
[7 [6 [5 [4 [3 [2 [1]]]]]] [8]]
7
6 8
5
4
3
2
1
Deleting 7... Returned 7
Nodes: 7
Minimum dpeth: 1
Maximum depth: 7
[8 [6 [5 [4 [3 [2 [1]]]]]]]
8
6
5
4
3
2
1
Deleting 2... Returned 2
Nodes: 6
Minimum dpeth: 1
Maximum depth: 6
[8 [6 [5 [4 [3 [1]]]]]]
8
6
5
4
3
1
Deleting 1... Returned 1
Nodes: 5
Minimum dpeth: 1
Maximum depth: 5
[8 [6 [5 [4 [3]]]]]
8
6
5
4
3

Testing right skewed tree:
Nodes: 8
Minimum dpeth: 2
Maximum depth: 7
[2 [1] [3 [4 [5 [6 [7 [8]]]]]]]
2
1 3
4
5
6
7
8
Deleting 2... Returned 2
Nodes: 7
Minimum dpeth: 2
Maximum depth: 6
[3 [1] [4 [5 [6 [7 [8]]]]]]
3
1 4
5
6
7
8
Deleting 7... Returned 7
Nodes: 6
Minimum dpeth: 2
Maximum depth: 5
[3 [1] [4 [5 [6 [8]]]]]
3
1 4
5
6
8
Deleting 1... Returned 1
Nodes: 5
Minimum dpeth: 1
Maximum depth: 5
[3 [4 [5 [6 [8]]]]]
3
4
5
6
8

Testing empty tree:
Nodes: 0
Minimum depth: -1
Maximum depth: -1
[]

Testing tree with only root:
Nodes: 1
Minimum dpeth: 1
Maximum depth: 1
[1]
1
Deleting 1... Returned 1
Nodes: 0
Minimum depth: -1
Maximum depth: -1
[]

Freeing trees
